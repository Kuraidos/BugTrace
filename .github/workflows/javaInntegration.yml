# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    #Create DB
    container: postgres:alpine
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    defaults:
      run:
        working-directory: BugTraceServer
    steps:
    - uses: actions/checkout@v2       
    - name: Connect to PostgreSQL
          # Runs a script that creates a PostgreSQL table, populates
          # the table with data, and then retrieves the data.
      env:
            # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
            # The default PostgreSQL port
          POSTGRES_PORT: 5432
      run: 
          postgres -V
          psql -U postgres
          CREATE DATABASE bugtrace;
            
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
